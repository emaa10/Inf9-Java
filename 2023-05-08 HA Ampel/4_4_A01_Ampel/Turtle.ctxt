#BlueJ class context
comment0.target=Turtle
comment0.text=\n\ Wrapperklasse\ f\u00FCr\ die\ Turtle\ auf\ der\ Zeichenfl\u00E4che.\n\ \n\ @author\ Albert\ Wiedemann\ \n\ @version\ 1.0\n
comment1.params=
comment1.target=Turtle()
comment1.text=\n\ Konstruktor\ der\ Turtle\n\ Erzeugt\ eine\ Turtle\ und\ versetzt\ sie\ in\ einen\ g\u00FCltigen\ Startzustand.\n
comment10.params=x\ y
comment10.target=void\ PositionSetzen(int,\ int)
comment10.text=\n\ Setzt\ die\ Position\ der\ Turtle.\n\ @param\ x\ x-Position\ der\ Turtle\n\ @param\ y\ y-Position\ der\ Turtle\n
comment11.params=gr\u00F6\u00DFe
comment11.target=void\ Gr\u00F6\u00DFeSetzen(int)
comment11.text=\n\ Setzt\ die\ Gr\u00F6\u00DFe\ des\ Turtlesymbols.\n\ @param\ gr\u00F6\u00DFe\ (neue)\ Gr\u00F6\u00DFe\n
comment12.params=farbe
comment12.target=void\ FarbeSetzen(java.lang.String)
comment12.text=\n\ Setzt\ die\ Farbe\ der\ Linie.\n\ Erlaubte\ Farben\ sind\:\n\ "wei\u00DF",\ "weiss",\ "rot",\ "gr\u00FCn",\ "gruen",\ "blau",\ "gelb",\n\ "magenta",\ "cyan",\ "hellgelb",\ "hellgr\u00FCn",\ "hellgruen",\n\ "orange",\ "braun",\ "grau",\ "schwarz"\n\ Alle\ anderen\ Eingaben\ werden\ auf\ die\ Farbe\ schwarz\ abgebildet.\n\ @param\ farbe\ (neue)\ Farbe\n
comment13.params=winkel
comment13.target=void\ WinkelSetzen(int)
comment13.text=\n\ Setzt\ den\ Drehwinkel\ der\ Turtle.\n\ Die\ Winkelangabe\ ist\ in\ Grad,\ positive\ Werte\ drehen\ gegen\ den\ Uhrzeigersinn,\n\ negative\ Werte\ drehen\ im\ Uhrzeigersinn\ (mathematisch\ positiver\ Drehsinn),\ d.\ h.\n\ 0\u02DA\:\ Turtle\ schaut\ nach\ rechts,\n\ 90\u02DA\:\ Turtle\ schaut\ nach\ oben,\n\ 180\u02DA\:\ Turtle\ schaut\ nach\ links,\n\ 270\u02DAbzw.\ -90\u02DA\:\ Turtle\ schaut\ nach\ unten\n\ @param\ winkel\ der\ (neue)\ Drehwinkel\ der\ Turtle\n
comment14.params=sichtbar
comment14.target=void\ SichtbarkeitSetzen(boolean)
comment14.text=\n\ Schaltet\ die\ Sichtbarkeit\ der\ Turtle\ ein\ oder\ aus.\n\ Erlaubte\ Parameterwerte\:\ true,\ false\n\ @param\ sichtbar\ (neue)\ Sichtbarkeit\ der\ Turtle\n
comment15.params=
comment15.target=void\ Entfernen()
comment15.text=\n\ Entfernt\ die\ Turtle\ aus\ dem\ Zeichenfenster.\n
comment16.params=
comment16.target=void\ NachVornBringen()
comment16.text=\n\ Bringt\ die\ Turtle\ eine\ Ebene\ nach\ vorn.\n
comment17.params=
comment17.target=void\ GanzNachVornBringen()
comment17.text=\n\ Bringt\ die\ Turtle\ in\ die\ vorderste\ Ebene.\n
comment18.params=
comment18.target=void\ NachHintenBringen()
comment18.text=\n\ Bringt\ die\ Turtle\ eine\ Ebene\ nach\ hinten.\n
comment19.params=
comment19.target=void\ GanzNachHintenBringen()
comment19.text=\n\ Bringt\ die\ Turtle\ in\ die\ hinterste\ Ebene.\n
comment2.params=
comment2.target=void\ Ausf\u00FChren()
comment20.params=
comment20.target=void\ ZumStartpunktGehen()
comment20.text=\n\ Setzt\ die\ Turtle\ wieder\ an\ ihre\ Ausgangsposition.\n
comment21.params=l\u00E4nge
comment21.target=void\ Gehen(double)
comment21.text=\n\ Bewegt\ die\ Turtle\ nach\ vorne.\n\ @param\ l\u00E4nge\ Anzahl\ der\ L\u00E4ngeneinheiten\n
comment22.params=grad
comment22.target=void\ Drehen(int)
comment22.text=\n\ Dreht\ die\ Turtle\n\ @param\ grad\ Drehwinkel\ (mathematisch\ positiver\ Drehsinn)\ im\ Gradma\u00DF\n
comment23.params=
comment23.target=void\ L\u00F6schen()
comment23.text=\n\ Versetzt\ Zeichenfl\u00E4che\ und\ Turtle\ in\ den\ Ausgangszustand\n
comment24.params=
comment24.target=void\ StiftHeben()
comment24.text=\n\ Turtle\ wechselt\ in\ den\ Modus\ "nicht\ zeichnen"\n
comment25.params=
comment25.target=void\ StiftSenken()
comment25.text=\n\ Turtle\ wechselt\ in\ den\ Modus\ "zeichnen"\n
comment26.params=
comment26.target=int\ WinkelGeben()
comment26.text=\n\ Gibt\ den\ aktuellen\ Winkel\ der\ Turtle\ zur\u00FCck.\n\ Die\ Winkelangabe\ ist\ in\ Grad,\ positive\ Werte\ drehen\ gegen\ den\ Uhrzeigersinn,\n\ negative\ Werte\ drehen\ im\ Uhrzeigersinn\ (mathematisch\ positiver\ Drehsinn),\ d.\ h.\n\ 0\u02DA\:\ Turtle\ schaut\ nach\ rechts,\n\ 90\u02DA\:\ Turtle\ schaut\ nach\ oben,\n\ 180\u02DA\:\ Turtle\ schaut\ nach\ links,\n\ 270\u02DAbzw.\ -90\u02DA\:\ Turtle\ schaut\ nach\ unten\n\ @return\ Winkel\ im\ Gradmass\n
comment27.params=
comment27.target=int\ XPositionGeben()
comment27.text=\n\ Gibt\ die\ x-Koordinate\ der\ Turtle\ zur\u00FCck\n\ @return\ x-Koordinate\n
comment28.params=
comment28.target=int\ YPositionGeben()
comment28.text=\n\ Gibt\ die\ y-Koordinate\ der\ Turtle\ zur\u00FCck\n\ @return\ y-Koordinate\n
comment29.params=sichtbar
comment29.target=void\ SichtbarkeitF\u00FCrSymbolSetzen(boolean)
comment29.text=\n\ Schaltet\ die\ Sichtbarkeit\ des\ Turtlesymbols\ ein\ oder\ aus.\n\ Erlaubte\ Parameterwerte\:\ true,\ false\n\ @param\ sichtbar\ (neue)\ Sichtbarkeit\ des\ Turtlesymbols\n
comment3.params=taste
comment3.target=void\ Taste(char)
comment30.params=
comment30.target=boolean\ Ber\u00FChrt()
comment30.text=\n\ Testet,\ ob\ die\ Turtle\ eine\ Figur\ \ ber\u00FChrt.\n\ @return\ true,\ wenn\ die\ Turtlekoordinaten\ innerhalb\ einer\ Grafikfigur\ sind\n
comment31.params=farbe
comment31.target=boolean\ Ber\u00FChrt(java.lang.String)
comment31.text=\n\ Testet,\ ob\ die\ Turtle\ eine\ Figur\ in\ der\ angegebenen\ Farbe\ ber\u00FChrt.\n\ @param\ farbe\ die\ Farbe,\ die\ die\ ber\u00FChrte\ Figur\ haben\ muss.\n\ @return\ true,\ wenn\ die\ Turtlekoordinaten\ innerhalb\ einer\ Grafikfigur\ in\ der\ angegebenen\ Farbe\ sind\n
comment32.params=objekt
comment32.target=boolean\ Ber\u00FChrt(java.lang.Object)
comment32.text=\n\ Testet,\ ob\ die\ Turtle\ die\ angegebene\ Figur\ ber\u00FChrt.\n\ @param\ objekt\ das\ Objekt,\ das\ getestet\ werden\ soll.\n\ @return\ true,\ wenn\ die\ Turtlekoordinaten\ innerhalb\ der\ angegebenen\ Grafikfigur\ sind\n
comment4.params=taste
comment4.target=void\ SonderTaste(int)
comment5.params=x\ y\ anzahl
comment5.target=void\ Geklickt(int,\ int,\ int)
comment6.params=
comment6.target=void\ AktionAusf\u00FChren()
comment6.text=\n\ Methode\ wird\ aufgerufen,\ wenn\ die\ Turtle\ handeln\ soll.\n\ Die\ vordefinierte\ Methode\ tut\ nichts.\n
comment7.params=taste
comment7.target=void\ TasteGedr\u00FCckt(char)
comment7.text=\n\ Die\ eigentliche\ Aktionsmethode\ f\u00FCr\ gedr\u00FCckte\ Tasten.\n\ <br>Muss\ bei\ Bedarf\ von\ einer\ Unterklasse\ \u00FCberschrieben\ werden.\ \n\ @param\ taste\ die\ gedr\u00FCckte\ Taste\n
comment8.params=taste
comment8.target=void\ SonderTasteGedr\u00FCckt(int)
comment8.text=\n\ Die\ eigentliche\ Aktionsmethode\ f\u00FCr\ gedr\u00FCckte\ Sondertasten.\n\ <br>Muss\ bei\ Bedarf\ von\ einer\ Unterklasse\ \u00FCberschrieben\ werden.\ \n\ @param\ taste\ KeyCode\ der\ gedr\u00FCckten\ Taste\n
comment9.params=x\ y\ anzahl
comment9.target=void\ MausGeklickt(int,\ int,\ int)
comment9.text=\n\ Die\ eigentliche\ Aktionsmethode\ f\u00FCr\ einen\ Mausklick.\n\ <br>Muss\ bei\ Bedarf\ von\ einer\ Unterklasse\ \u00FCberschrieben\ werden.\ \n\ @param\ x\ x-Position\ des\ Mausklicks\n\ @param\ y\ y-Position\ des\ Mausklicks\n\ @param\ anzahl\ Anzahl\ der\ aufeinanderfolgenden\ Mausklicks\n
numComments=33
